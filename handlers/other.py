import asyncio
from aiogram import types
from loader import dp, bot
from keyboards import inline
from utils import string


# –î—Ä—É–≥–æ–µ
@dp.callback_query_handler(text=["other"])
async def other(call: types.CallbackQuery):
    await bot.edit_message_text(chat_id=call.message.chat.id,
                                text=await string.menu(),
                                message_id=call.message.message_id,
                                disable_web_page_preview=True, reply_markup=await inline.other())


# –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?
@dp.callback_query_handler(text=["manual"])
async def manual(call: types.CallbackQuery):
    await bot.edit_message_text(chat_id=call.message.chat.id,
                                text=await string.manual(), parse_mode="MarkdownV2",
                                message_id=call.message.message_id,
                                disable_web_page_preview=True, reply_markup=await inline.backManual())


# –ò–≥—Ä–∞
@dp.callback_query_handler(text=["game", "again"])
async def game(call: types.CallbackQuery):
    if call.data != "again":
        await bot.edit_message_text(chat_id=call.message.chat.id,
                                    text="_‚ÑπÔ∏è –ï—Å–ª–∏ –∫—É–±–∏–∫ –≤—ã–¥–∞—ë—Ç –∑–Ω–∞—á–µ–Ω–∏–µ 1, 2 –∏–ª–∏ 3_\n*_–í—ã –≤—ã–≥—Ä–∞–ª–∏\!üí∏_*",
                                    parse_mode="MarkdownV2",
                                    message_id=call.message.message_id,
                                    disable_web_page_preview=True)
    else:
        await call.message.delete()

    slot = await bot.send_dice(call.from_user.id, emoji="üé≤")

    await asyncio.sleep(4)

    if slot.dice.value <= 3:
        await bot.send_message(call.from_user.id, "_–ü–æ–∑–¥—Ä–æ–≤–ª—è—é\!_ üéâ\n*_–í—ã –≤—ã–≥—Ä–∞–ª–∏\!_*", parse_mode="MarkdownV2",
                               reply_markup=await inline.game())
    else:
        await bot.send_message(call.from_user.id, "_–ö —Å–æ–∂–µ–ª–µ–Ω–∏—é\!_ üòî\n*_–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏\!_*", parse_mode="MarkdownV2",
                               reply_markup=await inline.game())
